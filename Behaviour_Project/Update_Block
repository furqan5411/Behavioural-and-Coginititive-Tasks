//update block(Original)
//nc is variable conditioning the type of neurons()
int nc = 0;

if (*nbl == 1) //Block responsible for sensory neurons
{   nc++;
if (nc==1) 
{
for(t = *(nbl + 1), a = (neurona + *(nbl + 1)), ni = (m_netinput + *(nbl + 1)), nt = (m_neurontype + *(nbl + 1)); t < (*(nbl + 1) + *(nbl + 2)); t++, a++, ni++, nt++)
{
    switch (*nt)
    {
        case 0:
            // input neurons are simple rely units
            *a = *(cobserv + t);
            break;
        case 1:
            // Logistic
            *a = logistic(*ni);
            break;
        case 2:
            // Tanh
            *a = tanh(*ni);
            break;
        case 3:
            // linear
            *a = linear(*ni);
            break;
        case 4:
            // Binary
            if (*ni >= 0.5)
                *a = 1.0;
            else
                *a = -1.0;
            break;
    }
}
}
if (nc==2) //Block responsible for internal neurons
{                
    
            
    for (int y=0; y<3; y++) // Loop which process 3 annonymous neuron or one unit.
        {

            
            for(t = *(nbl + 1), a = (neurona + *(nbl + 1)), ni = (m_netinput + *(nbl + 1)), nt = (m_neurontype + *(nbl + 1)); t < (*(nbl + 1) + *(nbl + 2)); t++, a++, ni++, nt++)

            {

                //Activation of First two with tanh and third with logistic.

                if (y==0||y==1)
                *a = tanh(*ni);

                else 
                *a = logistic(*ni);
    

            }
        }

            
    *(a-2) = (*(a-2) * *(a)) + (*(a-1) * (1 - *(a)));
    *(a-1) = 0;
    *a =0;  

} 
if (nc==3) //Block responsible for motor neurons
{
for(t = *(nbl + 1), a = (neurona + *(nbl + 1)), ni = (m_netinput + *(nbl + 1)), nt = (m_neurontype + *(nbl + 1)); t < (*(nbl + 1) + *(nbl + 2)); t++, a++, ni++, nt++)
{
    switch (*nt)
    {
        case 0:
            // input neurons are simple rely units
            *a = *(cobserv + t);
            break;
        case 1:
            // Logistic
            *a = logistic(*ni);
            break;
        case 2:
            // Tanh
            *a = tanh(*ni);
            break;
        case 3:
            // linear
            *a = linear(*ni);
            break;
        case 4:
            // Binary
            if (*ni >= 0.5)
                *a = 1.0;
            else
                *a = -1.0;
            break;
    }
}
nc=0;
} 
}
nbl = (nbl + 5)
